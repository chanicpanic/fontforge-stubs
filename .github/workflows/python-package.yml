# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"] #, "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v5
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v6
    #   with:
    #     python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --user --upgrade pip
        python -m pip install --user flake8
        python -m pip install --user ".[test]"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Install FUSE for AppImages
    #   run: |
    #     sudo add-apt-repository universe
    #     sudo apt install libfuse2t64
    - name: Fetch FontForge
      run: |
        wget -O FontForge.AppImage https://github.com/fontforge/fontforge/releases/download/20230101/FontForge-2023-01-01-a1dad3e-x86_64.AppImage
        chmod u+x FontForge.AppImage
        ./FontForge.AppImage --appimage-extract
    - name: Run stubtest
      run: |
        export SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0], end='')")
        python -c "import site; print(site.getsitepackages(), end='')"
        echo $SITE_PACKAGES
        ./squashfs-root/AppRun -script $(pwd)/tests/run_stubtest.py $SITE_PACKAGES
